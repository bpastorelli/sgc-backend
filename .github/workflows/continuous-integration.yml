name: Continuous Integration with GitHub Actions

on:
  push:
    branches: 
      - develop
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.13.0]

    steps:
    
    - name: Checkout
      uses: actions/checkout@v3
        
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
    
    - uses: actions/checkout@v4
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven

    - name: Build Application sgc-backend
      working-directory: .
      run: mvn clean package

    - name: Build Docker Compose sgc-backend Application
      working-directory: .
      run: docker compose build

    - name: Push Docker Sgc-backend Application
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/associados:latest ${{ secrets.DOCKER_USERNAME }}/associados:${{ github.run_id }} 
        
        docker push ${{ secrets.DOCKER_USERNAME }}/associados:${{ github.run_id }} 
        docker push ${{ secrets.DOCKER_USERNAME }}/associados:latest

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION_NAME }} --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def-sgc-backend
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.CONTAINER_NAME }}
        image: ${{ secrets.IMAGE_REPO_URL }}:latest

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ secrets.SERVICE_NAME }}
        cluster: ${{ secrets.CLUSTER_NAME }}
        wait-for-service-stability: true

    - name: Install dependencies
      working-directory: ./web
      run: npm install
      
    - name: Build sgc_angular
      working-directory: ./web
      run: npm run build:prod

    - name: Build Docker Compose sgc_angular Application
      working-directory: ./web
      run: docker compose build

    - name: Push Docker Sgc-angular Application
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/sgc_angular:latest ${{ secrets.DOCKER_USERNAME }}/sgc_angular:${{ github.run_id }} 
        
        docker push ${{ secrets.DOCKER_USERNAME }}/sgc_angular:${{ github.run_id }} 
        docker push ${{ secrets.DOCKER_USERNAME }}/sgc_angular:latest

    - name: Download task definition sgc_angular
      run: |
        aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION_ANGULAR }} --query taskDefinition > task-definition.json

    - name: Fill in the new image ID sgc_angular in the Amazon ECS task definition
      id: task-def-sgc-angular
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.CONTAINER_NAME_ANGULAR }}
        image: ${{ secrets.IMAGE_REPO_URL_ANGULAR }}:latest

    - name: Deploy Amazon ECS task definition sgc_angular
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ secrets.SERVICE_NAME_ANGULAR }}
        cluster: ${{ secrets.CLUSTER_NAME }}
        wait-for-service-stability: true
    
