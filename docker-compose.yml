---
version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    ports:
      - "2181:2181"
    networks:
      - app-net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    networks:
      - app-net
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      SPRING_KAFKA_HOST: broker:29092
      
  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.1
    networks:
      - app-net
    depends_on:
      - zookeeper
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      
  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.5.1
    depends_on:
      - schema-registry
      - zookeeper
      - broker
    ports: 
      - "8082:8082"
    hostname: rest-proxy
    container_name: rest-proxy
    networks:
      - app-net
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
      KAFKA_REST_LISTENER: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      
  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    networks:
      - app-net
    depends_on:
      - broker
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: broker:29092
      
  sgc:
    image: bpastorelli/associados:latest
    build: sgc
    ports:
      - "8080:8080"
    networks:
      - app-net
    depends_on:
      - broker
      - schema-registry
      - zookeeper
    environment:
      - SPRING_KAFKA_HOST=broker
      - SPRING_KAFKA_REGISTRY=http://schema-registry
      - TZ=America/Sao_Paulo
      - DEBIAN_FRONTEND=noninteractive
    volumes:
      - /src:/app/src
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      
  sgc-consumer:
    image: bpastorelli/sgc_consumer:latest
    ports:
      - "8181:8181"
    networks:
      - app-net
    depends_on:
      - broker
      - schema-registry
      - zookeeper
    environment:
      - SPRING_KAFKA_HOST=broker
      - SPRING_KAFKA_REGISTRY=http://schema-registry
      - DEBIAN_FRONTEND=noninteractive
      - TZ=America/Sao_Paulo
      
  angular-app:
    image: bpastorelli/sgc_angular:1.0.0
    environment:
       NODE_ENV: production
    ports: 
      - "80:80"
    networks:
      - app-net
 
networks:
  app-net:    
